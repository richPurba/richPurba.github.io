---
layout: post
title:  "Where the money goes part 2"
date:   2020-10-31 00:00:00+02:00
categories: investment
---
> DISCLAIMER: The views and opinions expressed here are those of the author and do not necessarily reflect the official policy or position of Devoteam. Any content provided by our bloggers or authors are of their opinion and are not intended to malign any religion, ethnic group, club, organization, company, individual or anyone or anything.


# Corona and IT Business
In the weirdest and strangest of all times, IT industry remains the strongest and interesting to any stakeholder. It is still strong and powerfull channel for your money. Take a look at the recent IPO of [Snowflake](https://www.snowflake.com/), a data company. Even big companies like Microsoft, Google and Facebook are still dominant in their market share. In the netherlands, [Adyen](https://www.adyen.com) has increased their stock price and recently the boards sold some of their stocks. This is a very interesting time.
# IT, Business Landscape, Java and Onwards
I have been studying Java a lot in my free time. Last year, i achieved a certification in Java OCA, a first step of Java certification. The exam was indeed not easy. And i am aiming to get OCP: the highest certification in Java programming and certainly the hardest of all. I just stopped to continue my Concurrency API study for a moment. I have been thinking about what to do with all this knowledge i have acquired and will acquire. The business landscape of IT has been very diverse and wide. I had a thought to propose a Streaming solution for any data warehouse for any company because Streaming real-data gives more value to any machine learning model one wants to create. This is not true. Many segment of markets actually want data warehousing where they can actually define a schema for anyone (similar concept to Design Pattern in software engineering where we choose interface than subclassing or inheritance). Or many companies can actually opt-out Data Lakes where they can just dump all the data to a lake and they don't have to care about the schema: they will think about any schema appropriate to any domain. Putting data into Stream is only beneficial when you actually need real-time data. Even [Confluent Platform](https://www.confluent.io/product/confluent-platform) proposes a platform where you can build all your streaming (not data!). This is a reasonable strategy. <br/>
Thus putting too much time on Java and to invest deeper in this topic and deeper into some complicated APIs makes sense only if i want to go any Trading companies in Amsterdam and get the best out of it there. These companies are ready to pay any Java developer between 80k - 100k. This number is much smaller than a Googler software engineer in Silicon Valley, but relatively big in Western Europe. <br/>
Another interesting option in IT business, especially in Western Europe, is that of Freelancing option. This option will allow you too get a very low tax break as a freelancer. You could get as low as no tax (if you earn up to Euro 29.800 in 2020). You indeed have to work up to 1225 hours (about 6.5 months in a year) and you can get a huge tax break as well when you have been working with more than one client. To give you a number, one case from a friend he actually pays tax about 5-10% (or basically a flat tax under 10k). So if you get a freelancing job and earn about 45e per hour (which is quite decent), which is 86.400e per year, you actually get 76.080e into your pocket. However, this is true if you are fulfilling many criterion, see [here for accurate checks](https://www.belastingdienst.nl/wps/wcm/connect/nl/ondernemers/content/checken-of-ik-ondernemer-ben-voor-de-inkomstenbelasting). Some of the checks that i remember that you need to have more than one customers in less than 6 months. If you want to get 80k while working as a freelancer, then you need a type of job that pays you for about 90e per hr and you will earn 160k per year with 1 month of vacation. What you get in your pocket after tax is actually around 80k (tax is about 50%). If you hire a very good accountant, you can actually just use many of this tax into a different form of legal thus your whole tax is not going to be an income tax but corporate tax (thus much better). In the corporate tax, you could allocate the money to something else (like training and personal benefits, laptops, even corporate car). You can compare this to a normal job where you actually have to pay up too 48% tax to the government. I think you get the idea. I remember a former colleague from my current employer, where he relocated to Singapore because he got a job as a manager there and the tax is also as low as 5% (working in one of a big 4 consulting company). If money is the objective, looking at the current landscape with how strong the industry despite of Corona, i have very little doubt to leave my current employer and start my own business.

# Rust, Blockchain and The Next Boom
Blockchain is the best architecture of the latest software engineering in this current time. It's so great that many great futuristic thinker like George Gilder, who predicted the booming of Google, proposes that this is the next big thing in IT. When i read the book from Andreas Antonopoulous and Ethereum Yellow Paper of Gavin Wood, i was bought. This is a new landscape where you have a state machine checks all the consistency of the state of the universe of all your application. <br/>
This is where Java loses the battle. The Java Concurrency model (it was proposed by Doug Lea since Java 1.5) is ripe with many checks and coherence evaluation such that all the threads work in harmony. Design of good concurrency is very important in Java. I have recently touched some of the chapters of [Rust](https://rust-lang.org) language. This language is very, very strict in memory utilization (take a look at the concept of Ownership in Rust). No wonders big blockchain projects like [Dfinity](https://www.dfinity.org) and [Polkadot](https://polkadot.network) also use Rust as their internal language.<br/>

# Core Java, Kafka, Kubernetes
To survive in these IT business, i've come to believe that more and more complicated IT business will evolve into a somewhat complex distributes systems. This is quite obvious. If you want to get the best out of it, invest your time not only in programming, but in Distributed Systems. You can't say that AWS is not built based on this deep nature of distributed system (see the profile of Amazon's CTO Werner Vogel, who happens to be a student of Tannenbaum). <br/>
Kafka seems to be a good option for making all distributed systems **in sync** (for lack of a better word). Kubernetes is an automated system for all infrastructure.
I wouldn't recommend certification for AWS, GCP, or Azure cloud platform. These platforms are very complicated (the most user friendly one is Azure). They are very capex-intensive, in terms of time you will have to invest. 